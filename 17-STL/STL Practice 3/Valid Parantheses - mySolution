#include <iostream>
#include <vector>
#include <unordered_set>
using namespace std;

/*
                Valid Parentheses - mySolution

    Given a string containing just the characters(,),,}',"[' and ']' , determine if the input string is valid.An input string is valid if:
    1. Open brackets must be closed by the same type of brackets.
    2. Open brackets must be closed in the correct order.

    Note that an empty string is also considered valid.
    ● Valid: (), ()(), (()()), {}{}, (((()))), ([]), ()[]{}, {[]}
    ● Invalid: (], ()), (][), (], ([)]
*/

int main() {
    unordered_set<char> uns = { ')' , '}' , ']' };
    vector<char> v;
    bool valid = true;

    string input;
    cin >> input;

    for (char val : input) {
        if (uns.count(val)) {
            if ((val == ')' && v.back() == '(') ||
                (val == '}' && v.back() == '{') ||
                (val == ']' && v.back() == '['))
                v.pop_back();
            else {
                valid = false;
                break;
            }
        }
        else
            v.push_back(val);
    }

    if (valid && v.empty())
        cout << "valid paranthesis";
    else
        cout << "invalid paranthesis";

    return 0;
}


