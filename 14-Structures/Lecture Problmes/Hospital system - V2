#include <iostream>
#include <string>
using namespace std;

/*
                Hospital System - V2
*/

#define SPECIALIZATION_NUM 20
#define SPOTS_NUM 5

struct Patient {
    string name;
    int status;

    //default constructor to initalization 
    Patient() = default;

    Patient(string new_name, int new_status) {
        name = new_name;
        status = new_status;
    }
};

struct Specialization {
    int count{ 0 };
    Patient patients[SPOTS_NUM];

    bool is_empty() {
        return count == 0;
    }

    bool is_full() {
        return count == SPOTS_NUM;
    }

    void add_p(string name, int status) {
        if (is_full()) {
            cout << "Sorry, no more spots available for this specialization" << endl;
            return;
        }
        if (status) {
            for (int i = count; i > 0; --i)
                patients[i] = patients[i - 1];
            patients[0] = Patient(name, status);
        }
        else
            patients[count] = Patient(name, status);
        count++;
    }

    void print_p(int spec) {
        if (is_empty())
            return;
        cout << "There are " << count << " Patients in specialization " << spec + 1 << endl;
        for (int i = 0; i < count; ++i)
            cout << patients[i].name << " " << (patients[i].status ? "urgent" : "regular") << endl;
    }

    void next_patient(int spec_num) {
        if (is_empty()) {
            cout << " No patients at the moment , have rest , DR" << endl;
            return;
        }
        cout << patients->name;
        cout << " Please go with the Dr " << endl;
        for (int i = 0; i < count - 1; ++i)
            patients[i] = patients[i + 1];
        count--;
    }

};

Specialization spec[SPECIALIZATION_NUM];


void add_new() {
    int spec_num, status;
    string name;

    cout << "Enter specialization, name, and status: ";
    cin >> spec_num >> name >> status;

    spec_num--;

    spec[spec_num].add_p(name, status);
}

void print_all() {
    cout << "*******************************" << endl;
    for (int i = 0; i < SPECIALIZATION_NUM; ++i)
        spec[i].print_p(i);
}

void get_next() {
    cout << "Enter specialization: ";
    int spec_num;
    cin >> spec_num;
    spec[spec_num].next_patient(spec_num);
}

void hospital_system() {
    int choice;
    while (true) {
        cout << "\nEnter your choice:\n";
        cout << "1) Add new patient\n";
        cout << "2) Print all patients\n";
        cout << "3) Get next patient\n";
        cout << "4) Exit\n";
        cin >> choice;
        switch (choice) {
        case 1:
            add_new();
            break;
        case 2:
            print_all();
            break;
        case 3:
            get_next();
            break;
        case 4:
            return;
        default:
            cout << "not a valid choice" << endl;
        }
    }
}
int main() {
    hospital_system();
    return 0;
}

/*
1
15 mostafa 0
1
15 asmaa 0
1
15 belal 1
2
1
15 ziad 1
2
1
15 safaa 0
1
15 ashraf 0
2
3
10
3
15
2
1
7 soha 1
2
1
15 amal 1
3
7
2
*/
